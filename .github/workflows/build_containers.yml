name: Docker

on:
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  find-dockerfiles:
    runs-on: ubuntu-latest
    outputs:
      dockerfiles: ${{ steps.get-dockerfiles.outputs.dockerfiles }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find all Dockerfiles
        id: get-dockerfiles
        run: |
          DOCKERFILES=$(find . -name 'Dockerfile' -exec dirname {} \; | sed 's|^\./||')
          DOCKERFILES_JSON=$(printf '%s\n' "${DOCKERFILES}" | jq -R -s -c 'split("\n") | map(select(. != ""))')
          echo "dockerfiles=${DOCKERFILES_JSON}" >> $GITHUB_OUTPUT

  build:
    needs: find-dockerfiles
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile: ${{ fromJson(needs.find-dockerfiles.outputs.dockerfiles) }}
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20
        with:
          cosign-release: 'v2.2.4'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.dockerfile }}:${{ github.sha }}-${{ matrix.dockerfile }}

      - name: Build Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.dockerfile }}
          file: ./${{ matrix.dockerfile }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.dockerfile }}:${{ github.sha }}
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
        if: github.event_name != 'pull_request'

      - name: Sign Docker Image
        uses: sigstore/cosign-installer@v3
        with:
          args: "sign --yes ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.dockerfile }}:${{ github.sha }}"
        env:
          COSIGN_EXPERIMENTAL: 1
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.event_name != 'pull_request'
